# Sets some default verbose
#
/control/verbose 0
/run/verbose 0
/vis/verbose 0
/process/em/verbose 0
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 1000x1000-0+0
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
#
# Draw geometry:
#/vis/drawVolume target
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointThetaPhi 0. 0.
#/vis/viewer/set/viewpointVector 0.2 1 -0.5
#/vis/viewer/set/viewpointVector 0.5 0.8 1.
#
# Specify zoom value:
/vis/viewer/zoom .2 
#
# Specify style (surface or wireframe):
/vis/viewer/set/style wireframe
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
#/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
#/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
/vis/scene/add/hits
#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
#
# define scoring mesh
#/score/create/cylinderMesh testDetector
#/score/mesh/cylinderSize 10. 0.1 cm
#/score/mesh/nBin 4 4 4
#/score/mesh/translate/xyz 0. 0. 50. cm
#/score/mesh/rotate/rotateY -30. deg
#/score/quantity/passageCellCurrent cellCurrent
#/score/close
#
#/score/drawProjection testDetector cellCurrent
#/score/colorMap/setMinMax ! 0. 20.

# uncomment to see tracks
/vis/scene/add/trajectories smooth
#/vis/modeling/trajectories/create/drawByCharge

#/vis/scene/create
# Draw coordinate axes:
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate

# For file-based drivers, use this to create an empty detector view:
/vis/viewer/flush

/vis/scene/add/axes 0 0 0 10 cm

/run/beamOn 50000000

#/score/dumpAllQuantitiesToFile testDetector testScorerOutput.txt
